{
  "name": "consistent-observable",
  "description": "Little framework for simplifying reaction to values changing over time.",
  "main": "dist/lib/consistentObservable.js",
  "files": [
    "dist/",
    "README.md"
  ],
  "keywords": [
    "reactive",
    "observable",
    "framework",
    "module",
    "event",
    "update",
    "atomic"
  ],
  "license": "ISC",
  "repository": {
    "type": "git",
    "url": "https://github.com/2i/consistent-observable.git"
  },
  "scripts": {
    "build": "babel ./src -d ./build/src --source-maps true && shx cp -r ./build/src ./dist",
    "clean": "shx rm -rf ./build ./coverage ./dist",
    "rebuild": "npm run clean && npm run build",
    "build:test": "babel ./test -d ./build/test --source-maps true",
    "build:all": "parallelshell 'npm run build' 'npm run build:test' && echo '✔ all success'",
    "test:prepare": "npm run clean && npm run build:all",
    "test:prepare:watch": "onchange '{src,test}/**/*.js' -i -- npm run test:prepare",
    "test:only": "node build/test/consistentObservable.js",
    "test:only:pretty": "node build/test/consistentObservable.js | faucet",
    "test": "npm run test:prepare && npm run test:only",
    "test:pretty": "npm run test:prepare && npm run test:only:pretty",
    "coverage:only": "nyc --reporter=lcov --reporter=text --reporter=html npm run test:only",
    "coverage": "npm run test:prepare && npm run coverage:only",
    "coverage:only:pretty": "nyc --reporter=lcov --reporter=text --reporter=html npm run test:only:pretty",
    "coverage:pretty": "npm run test:prepare && npm run coverage:only:pretty",
    "coverage:watch": "onchange '{src,test}/**/*.js' -i -- npm run coverage",
    "lint": "eslint src test",
    "lint:watch": "onchange '{src,test}/**/*.js' -i -- npm run lint -loglevel silent",
    "update-dependencies": "npm prune && npm install",
    "validate": "npm run update-dependencies && parallelshell 'npm run lint' 'npm run test' && echo '✔ all success'",
    "validate:pretty": "parallelshell 'npm run lint' 'npm run test:pretty' && echo '✔ all success\\a' || (echo '✘ some error\\a'; sleep 0.2; echo '\\a')",
    "validate:watch": "onchange '{src,test}/**/*.js' -i -- npm run validate -loglevel silent",
    "validate:watch:pretty": "onchange '{src,test}/**/*.js' -i -- npm run validate:pretty -loglevel silent",
    "watch": "npm run validate:watch:pretty",
    "audit": "nsp check package",
    "check": "parallelshell 'npm run audit' 'npm outdated --depth 0' && echo '✔ all success'",
    "prepare": "npm run validate && npm run check && echo '✔ all success'",
    "preversion": "npm run prepare && node -e \"let rl = require('readline').createInterface({input: process.stdin, output: process.stdout}); rl.question('Ok? (type yes) ', (answer) => process.exit(answer === 'yes' ? 0 : 1))\"",
    "postversion": "git push && git push --tags && npm publish"
  },
  "author": {
    "name": "Christoph Müller",
    "email": "iblzm@hotmail.de"
  },
  "pre-commit": [
    "validate"
  ],
  "dependencies": {
    "one-time-event": "^4.1.0"
  },
  "devDependencies": {
    "babel-cli": "6.14.0",
    "babel-core": "6.14.0",
    "babel-eslint": "6.1.2",
    "babel-plugin-transform-es2015-modules-umd": "6.12.0",
    "babel-plugin-transform-function-bind": "6.8.0",
    "babel-polyfill": "6.13.0",
    "babel-preset-es2015": "6.14.0",
    "cz-conventional-changelog": "1.2.0",
    "eslint": "3.5.0",
    "faucet": "0.0.1",
    "nsp": "2.6.1",
    "nyc": "8.1.0",
    "onchange": "3.0.2",
    "parallelshell": "github:2i/parallelshell#v2.1.0",
    "pre-commit": "1.1.3",
    "shx": "0.1.4",
    "tap-nyan": "0.0.2",
    "tape": "4.6.0"
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "nyc": {
    "include": [
      "build/src/**/*.js"
    ],
    "require": [],
    "sourceMap": true,
    "instrument": true
  },
  "version": "4.4.0"
}
